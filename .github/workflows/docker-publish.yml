name: Docker Build and Publish

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKER_USERNAME: ${{ secrets.GOBANSOURCE_DOCKER_HUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.GOBANSOURCE_DOCKER_HUB_TOKEN }}
  IMAGE_NAME: gobansource/fcmtester

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Add Node.js setup
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      # Install dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      # Build frontend
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          repository: ${{ env.IMAGE_NAME }}
          readme-filepath: ./README.md

      - name: Upgrade
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: ${{ secrets.DEPLOY_WORKFLOW }}
          repo: ${{ secrets.DEPLOY_WORKFLOW_REPO }}
          ref: main
          token: ${{ secrets.PAT_COMPOSE_WORKFLOW_DISPATCH }}
          inputs: '{ "servicename": "fcmtester","env":"prd" }'
